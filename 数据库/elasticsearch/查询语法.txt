传送门
https://www.cnblogs.com/haixiang/p/12095578.html

https://blog.csdn.net/RIGHTSONG/article/details/115580816

match#
match是标准的全文检索
在匹配之前会先对查询关键字进行分词
可以指定分词器来覆盖mapping中设置的搜索分词器


Filter#
其实准确来说，ES中的查询操作分为2种：查询（query）和过滤（filter）。
查询即是之前提到的query查询，它（查询）默认会计算每个返回文档的得分，然后根据得分排序。
而过滤（filter）只会筛选出符合的文档，并不计算得分，且它可以缓存文档。
所以，单从性能考虑，过滤比查询更快。

filter是区间过滤器 range filter

bool组合查询#

bool查询可以组合多种叶子查询，包含如下：
must：出现于匹配查询当中，有助于匹配度(_score)的计算
filter：必须满足才能出现，属于过滤，不会影响分值的计算，但是会过滤掉不符合的数据
should：该条件下的内容是应该满足的内容，如果符合会增加分值，不符合降低分值，不会不显示
must_not：满足的内容不会出现，与filter功能相反，属于过滤，不会影响分值的计算，但是会过滤掉不符合的数据


term类查询
精确查询，一般使用在keyword类型的字段上，搜索前不会再对搜索词进行分词，
所以我们的所搜索的词必须是文档分词结果集中的一个，也就是说整个搜索词将被带入文档的

例如：我们的文档中有个字段值是“北京奥运”，那么字段在默认分词器的作用下，分词集合中可能会有2个值：北京、奥运（不同分词器可能结果不同），
那么此时使用term查询输入北京、奥运两个词是都是可以匹配到的，如果我们输入“北京奥运欢迎您”，那么就无法匹配到

注意：在es的文档中，字符串类型有两种，分别是text与keyword，其中text类型的字段存入时，会被分词后存储，
分词后英文将被统一转换成小写。而在使用term来对text字段查询时，由于没有对查询条件分词，所以查询条件若是输入大写英文，
这时大写英文不会转成小写，就可能导致在文档的分词集合中匹配不上（匹配时是大小写区分的），对keyword类型的字段检索没有这个问题


查询索引user信息(索引字段类型等)
GET：http://192.168.0.10:9200/user


//模糊分词查询
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "realname": {
              "query": "唐玉梅",
              "analyzer": "ik_smart"
            }
          }
        }
      ]
    }
  },
  "size": 20,
  "from": 0
}


//一般查询
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "catalog": 1124196
          }
        },
        {
          "match": {
            "member_type": 100
          }
        }
      ]
    }
  }
}




//区间
{
  "query": {
    "bool": {
      "filter": [
        {
          "range": {
            "brithday": {
              "gte": "1992-01-01",
              "lte": "2001-01-01"
            }
          }
        }
      ],
      "must": [
        {
          "match": {
            "catalog": 1124196
          }
        },
        {
          "match": {
            "member_type": 100
          }
        }
      ]
    }
  },
  "aggs": {
    "total_size": {
      "cardinality": {
        "field": "uid"
      }
    }
  }
}



path:_search
//查询数量
{
  "query": {
    "bool": {
      "must": [
        {
          "term": {
            "catalog": 1000994
          }
        }
      ]
    }
  },
  "aggs": {
    "total_size": {
      "cardinality": {
        "field": "_id"
      }
    }
  },
  "size": 10,
  "from": 10,
  "sort": [
    {
      "brithday": {
        "unmapped_type": "keyword",
        "order": "desc"
      }
    }
  ]
}

