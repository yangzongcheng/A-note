MySQL 配置参数优化


1.修改back_log参数值:
由默认的50修改为500 back_log=500
back_log值指出在MySQL暂时停止回答新请求之前的短时间内多少个请求可以被存在堆栈中。
也就是说，如果MySql的连接数据达到max_connections时，新来的请求将会被存在堆栈中，
以等待某⼀一连接释放资源，该堆栈的数量即back_log，如果等待连接的数量超过back_log，
将不不被授予连接资源。查看mysql 当前系统默认back_log值，
命令：show variables like 'back_log’;


2.修改wait_timeout参数值，由默认的8小时，修改为1或者半小时。减少wait的连接数，如果系统使用的人少可以调大一点
wait_timeout=1800（单位为妙）
show variables like 'wait_timeout';

3.修改max_connections参数值，根据系统需要调整
show variables like 'max_connections';


4.修改max_user_connections值，由默认的0，修改为800，max_user_connections=800
针对某一个账号的所有客户端并行连接到MYSQL服务的最大并行连接数。简单说是指同一个账号能够同时连接到mysql服务的最大连接数。
设置为0表示不限制。查看max_user_connections值show variables like 'max_user_connections';


5.修改thread_concurrency值，由目前默认的8，修改为64 thread_concurrency=64
thread_concurrency应设为CPU核数的2倍.
比如有1个双核的CPU, 那thread_concurrency 的应该为4;
2个双核的cpu, thread_concurrency的值应为8.
show variables like 'thread_concurrency';

6.设置MySQL的默认存储引擎default-storage-engine
default-storage-engine= InnoDB

7.修改max_connect_errors为100
这个参数负责阻止客户端尝试暴力破解密码，当某台主机错误连接次数达到该值时，该主机无法再尝试登陆。解决方法是重启mysql，或者把该值改大一点


8.开启查询缓存
query_cache_type=1 开启缓存，显示为ON
query_cache_size设置为1024*1024*128