秒杀活动：
流量巨大，可以添加验证码等操作分流。


加入抢购10台手机，一个用户只能抢购一台。

redis 实现：
商品加入队列
订单生成成功就减库存，出队列(减库存)，购买成功，如果放到支付成功回调后在减库存会出问题，可以做一个定时任务 如5分钟不支付返回库存，订单失效。
队列长度为0 秒杀完成。
因为redis单线程， 操作是原子性的所以不会出现超卖。
原子性：事务可看作是一个程序,它要么完整的被执行,要么完全不执行。这种特性就叫原子性


redis计数，设定一个值 当商品库存大于0且计数达到设定值时提示排队中
前端可以隔三秒或者随机1-5s钟请求一次，目的是分流
当库存为0提示商品已卖完


防止超卖其他方式。

redis setnx  设置成功 获取锁  如果key 已经存在获取锁失败
1、事务：
库存字段使用unsigned类型，不能为负数。

sql 语句：
update ih_store set number=number-{$number} where sku_id='$sku_id'" and （number-$nubmer）>=0;

文件锁

mysql 乐观锁 带个版本号



