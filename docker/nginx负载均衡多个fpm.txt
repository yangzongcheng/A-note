
创建三个php容器 指定网络

docker run --name php71  -v /Users/yangzc/www/phpDocker/app1:/www  -p 9020:9000 --net mynet --ip 192.168.2.2 -d  php:7.1.30-fpm


docker run --name php72  -v /Users/yangzc/www/phpDocker/app2:/www  -p 9021:9000 --net mynet --ip 192.168.2.3 -d  php:7.1.30-fpm


docker run --name php73  -v /Users/yangzc/www/phpDocker/app3:/www  -p 9022:9000 --net mynet --ip 192.168.2.4 -d  php:7.1.30-fpm


创建一个nginx 容器
docker run --name nginx-php -v /Users/yangzc/www/phpDocker/nginx:/etc/nginx/conf.d -p 8080:80 --net mynet --ip 192.168.2.5 -d nginx


nginx做如下配置：
宿主访问：127.0.0.1:8080
负载均衡 配置成功




nginx 配置：


upstream remote_php_ip {
    server 192.168.2.2:9000;
    server 192.168.2.3:9000;
    server 192.168.2.4:9000;

    }

server {
	listen			80;
	  listen  [::]:80;
      server_name  localhost;
	  root			/www;

		location / {

			if (!-e $request_filename){
                rewrite ^(.*)$ /index.php?s=$1 last;
                break;
            }

    	 }


	#access_log		/Applications/MxSrvs/logs/www.el.com.lo

	index index.php index.html index.htm;
#limit_conn one 10;

location ~ \.php {
	include fastcgi_params;
	fastcgi_pass remote_php_ip;
	fastcgi_index index.php;

	set $real_script_name $fastcgi_script_name;
	if ($fastcgi_script_name ~ "^(.+?\.php)(/.+)$") {
		set $real_script_name $1;
		set $path_info $2;
	 }
	fastcgi_param SCRIPT_FILENAME $document_root$real_script_name;
	fastcgi_param SCRIPT_NAME $real_script_name;
    fastcgi_param PATH_INFO $path_info;
	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
}

}